{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","itemWidth","frameSize","step","animationDuration","infinite","useState","currentIndex","setCurrentIndex","className","style","transform","transitionDuration","map","imageUrl","index","width","src","alt","String","type","onClick","newIndex","length","Math","max","min","App","state","name","value","this","setState","onChange","e","handleInputChange","parseInt","target","React","Component","ReactDOM","render","document","getElementById"],"mappings":"uQAsDeA,EA1C2B,SAAC,GAOpC,IANLC,EAMI,EANJA,OAMI,IALJC,iBAKI,MALQ,IAKR,MAJJC,iBAII,MAJQ,EAIR,MAHJC,YAGI,MAHG,EAGH,MAFJC,yBAEI,MAFgB,IAEhB,MADJC,gBACI,SACJ,EAAwCC,mBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAkBA,OACE,sBAAKC,UAAU,WAAf,UACE,oBAAIA,UAAU,iBAAiBC,MAAO,CAAEC,UAAU,eAAD,OAAiBJ,EAAeN,EAAhC,OAAgDW,mBAAmB,GAAD,OAAKR,EAAL,OAAnH,SACGJ,EAAOa,KAAI,SAACC,EAAUC,GAAX,OACV,oBAAmBL,MAAO,CAAEM,MAAM,GAAD,OAAKf,EAAL,OAAjC,SACE,qBAAKgB,IAAKH,EAAUI,IAAKC,OAAOJ,MADzBD,QAMb,wBAAQM,KAAK,SAASC,QAlBR,WAChB,IAAMC,EAAWf,EAAeJ,EAEhCK,EAAgBH,GACXiB,EAAWtB,EAAOuB,QAAUvB,EAAOuB,OACpCC,KAAKC,IAAIH,EAAU,KAaqB,UAAQ,OAAlD,kBACA,wBAAQF,KAAK,SAASC,QA3BR,WAChB,IAAMC,EAAWf,EAAeJ,EAEhCK,EAAgBH,EACZiB,EAAWtB,EAAOuB,OAClBC,KAAKE,IAAIJ,EAAUtB,EAAOuB,OAASrB,KAsBK,UAAQ,OAAlD,sBCrCAyB,E,4MACJC,MAAe,CACb5B,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,gBAEFC,UAAW,IACXC,UAAW,EACXC,KAAM,EACNC,kBAAmB,K,uDAGrB,SAAkByB,EAAmBC,GACnCC,KAAKC,SAAL,eAAiBH,EAAOC,M,oBAG1B,WAAU,IAAD,OACP,EAEIC,KAAKH,MADP5B,EADF,EACEA,OAAQC,EADV,EACUA,UAAWC,EADrB,EACqBA,UAAWC,EADhC,EACgCA,KAAMC,EADtC,EACsCA,kBAGtC,OACE,sBAAKK,UAAU,MAAf,UAEE,qBAAI,UAAQ,QAAZ,2BAAmCT,EAAOuB,OAA1C,aAEA,gCACE,gDAEE,uBACEH,KAAK,SACLS,KAAK,YACLC,MAAO7B,EAEPgC,SAAU,SAACC,GAAD,OAAO,EAAKC,kBAAkB,YAAaC,SAASF,EAAEG,OAAOP,MAAO,WAGlF,gDAEE,uBACEV,KAAK,SACLS,KAAK,YACLC,MAAO5B,EAEP+B,SAAU,SAACC,GAAD,OAAO,EAAKC,kBAAkB,YAAaC,SAASF,EAAEG,OAAOP,MAAO,WAGlF,0CAEE,uBACEV,KAAK,SACLS,KAAK,OACLC,MAAO3B,EAEP8B,SAAU,SAACC,GAAD,OAAO,EAAKC,kBAAkB,OAAQC,SAASF,EAAEG,OAAOP,MAAO,WAG7E,6DAEE,uBACEV,KAAK,SACLS,KAAK,oBACLC,MAAO1B,EAEP6B,SAAU,SAACC,GAAD,OAAO,EAAKC,kBAAkB,oBAAqBC,SAASF,EAAEG,OAAOP,MAAO,cAK5F,cAAC,EAAD,CACE9B,OAAQA,EACRC,UAAWA,EACXC,UAAWA,EACXC,KAAMA,EACNC,kBAAmBA,EACnBC,UAAU,W,GAnFFiC,IAAMC,WA0FTZ,ICnGfa,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.7b54b60a.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\ninterface CarouselProps {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nconst Carousel: React.FC<CarouselProps> = ({\n  images,\n  itemWidth = 130,\n  frameSize = 3,\n  step = 3,\n  animationDuration = 1000,\n  infinite = false,\n}) => {\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  const nextSlide = () => {\n    const newIndex = currentIndex + step;\n\n    setCurrentIndex(infinite\n      ? newIndex % images.length\n      : Math.min(newIndex, images.length - frameSize));\n  };\n\n  const prevSlide = () => {\n    const newIndex = currentIndex - step;\n\n    setCurrentIndex(infinite\n      ? (newIndex + images.length) % images.length\n      : Math.max(newIndex, 0));\n  };\n\n  return (\n    <div className=\"Carousel\">\n      <ul className=\"Carousel__list\" style={{ transform: `translateX(-${currentIndex * itemWidth}px)`, transitionDuration: `${animationDuration}ms` }}>\n        {images.map((imageUrl, index) => (\n          <li key={imageUrl} style={{ width: `${itemWidth}px` }}>\n            <img src={imageUrl} alt={String(index)} />\n          </li>\n        ))}\n      </ul>\n\n      <button type=\"button\" onClick={prevSlide} data-cy=\"prev\">Prev</button>\n      <button type=\"button\" onClick={nextSlide} data-cy=\"next\">Next</button>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n  };\n\n  handleInputChange(name: keyof State, value: number | unknown) {\n    this.setState({ [name]: value } as Pick<State, keyof State>);\n  }\n\n  render() {\n    const {\n      images, itemWidth, frameSize, step, animationDuration,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <div>\n          <label>\n            Item Width:\n            <input\n              type=\"number\"\n              name=\"itemWidth\"\n              value={itemWidth}\n              // eslint-disable-next-line max-len\n              onChange={(e) => this.handleInputChange('itemWidth', parseInt(e.target.value, 10))}\n            />\n          </label>\n          <label>\n            Frame Size:\n            <input\n              type=\"number\"\n              name=\"frameSize\"\n              value={frameSize}\n              // eslint-disable-next-line max-len\n              onChange={(e) => this.handleInputChange('frameSize', parseInt(e.target.value, 10))}\n            />\n          </label>\n          <label>\n            Step:\n            <input\n              type=\"number\"\n              name=\"step\"\n              value={step}\n              // eslint-disable-next-line max-len\n              onChange={(e) => this.handleInputChange('step', parseInt(e.target.value, 10))}\n            />\n          </label>\n          <label>\n            Animation Duration (ms):\n            <input\n              type=\"number\"\n              name=\"animationDuration\"\n              value={animationDuration}\n              // eslint-disable-next-line max-len\n              onChange={(e) => this.handleInputChange('animationDuration', parseInt(e.target.value, 10))}\n            />\n          </label>\n        </div>\n\n        <Carousel\n          images={images}\n          itemWidth={itemWidth}\n          frameSize={frameSize}\n          step={step}\n          animationDuration={animationDuration}\n          infinite={false}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}